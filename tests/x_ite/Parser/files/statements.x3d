<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "http://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Interchange' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='CADGeometry' level='2'/>
    <component name='ParticleSystems' level='3'/>
    <component name='Scripting' level='1'/>
    <component name='Shaders' level='1'/>
    <unit category='angle' name='degree' conversionFactor='0.017453292519943295'/>
    <unit category='force' name='millinewton' conversionFactor='0.001'/>
    <unit category='length' name='millimetre' conversionFactor='0.001'/>
    <unit category='mass' name='gram' conversionFactor='0.001'/>
    <meta name='created' content='Mon, 08 May 2023 12:03:58 GMT'/>
    <meta name='comment' content='Rise and Shine'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Sunrize X3D Editor V1.0.33, https://create3000.github.io/sunrize/'/>
    <meta name='identifier' content='file:///Users/holger/Desktop/X_ITE/x_ite-tests/tests/x_ite/Parser/files/statements.x3d'/>
    <meta name='modified' content='Fri, 19 May 2023 10:14:43 GMT'/>
  </head>
  <Scene>
    <ExternProtoDeclare name='Foo' url='"proto.x3d"'>
      <field accessType='inputOutput' type='SFVec3f' name='translation'/>
      <field accessType='inputOutput' type='SFRotation' name='rotation'/>
    </ExternProtoDeclare>
    <ExternProtoDeclare name='Second' url=''>
    </ExternProtoDeclare>
    <ProtoDeclare name='Test'>
      <ProtoInterface>
        <field accessType='inputOnly' type='SFBool' name='set_bind'/>
        <field accessType='inputOutput' type='SFFloat' name='transparency'/>
        <field accessType='outputOnly' type='SFBool' name='isBound'/>
      </ProtoInterface>
      <ProtoBody>
        <Background DEF='Summer'
            skyAngle='45.83662, 74.48451, 80.21409, 90.00021'
            skyColor='0.21 0.31 0.59, 0.33 0.45 0.7, 0.57 0.66 0.85, 0.6 0.73 0.89, 0.7 0.83 0.98'
            groundAngle='37.81361, 68.75494, 80.16367, 90.00021'
            groundColor='0.105712 0.156051 0.297, 0.187629 0.255857 0.398, 0.33604 0.405546 0.542, 0.3612 0.469145 0.602, 0.39471 0.522059 0.669'>
          <IS>
            <connect nodeField='set_bind' protoField='set_bind'/>
            <connect nodeField='transparency' protoField='transparency'/>
            <connect nodeField='isBound' protoField='isBound'/>
          </IS>
        </Background>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance name='Test'/>
    <Transform DEF='Transform'
        rotation='0 1 0 45'>
      <Shape>
        <Appearance>
          <Material/>
        </Appearance>
        <Box DEF='Box'
            size='4000 4000 4000'/>
      </Shape>
    </Transform>
    <ParticleSystem>
      <SurfaceEmitter DEF='Emitter'
          mass='2000'/>
      <ForcePhysicsModel DEF='Force'
          force='0 -10000 0'/>
    </ParticleSystem>
    <ProtoInstance name='Foo' DEF='FOO'>
      <fieldValue name='translation' value='0 3.1 0'/>
      <fieldValue name='rotation' value='0 1 0 45'/>
    </ProtoInstance>
    <QuadSet DEF='QUAD'/>
    <Inline DEF='InlineWithExport'
        url='"proto.x3d"'/>
    <TimeSensor DEF='Timer'
        description='Test Timer'
        cycleInterval='10'/>
    <PositionInterpolator DEF='PI'/>
    <Transform DEF='T'/>
    <Script DEF='NewScript'>
<![CDATA[ecmascript:

function initialize ()
{
   // Add code here.
}

function set_field (value, time)
{
   console .log (time, value);
}
]]>
    </Script>
    <ComposedShader DEF='NewShader'
        language='GLSL'>
      <ShaderPart DEF='VertexShader'>
<![CDATA[data:x-shader/x-vertex,#version 300 es

precision highp float;
precision highp int;

uniform mat4 x3d_ProjectionMatrix;
uniform mat4 x3d_ModelViewMatrix;

in vec4 x3d_Vertex;

void
main ()
{
   gl_Position = x3d_ProjectionMatrix * x3d_ModelViewMatrix * x3d_Vertex;
}
]]>
      </ShaderPart>
      <ShaderPart DEF='FragmentShader'
          type='FRAGMENT'>
<![CDATA[data:x-shader/x-fragment,#version 300 es

precision highp float;
precision highp int;

out vec4 x3d_FragColor;

void
main ()
{
   x3d_FragColor = vec4 (1.0, 0.0, 0.0, 1.0);
}
]]>
      </ShaderPart>
    </ComposedShader>
    <IMPORT inlineDEF='InlineWithExport' importedDEF='ExportedInstanceFoo'/>
    <IMPORT inlineDEF='InlineWithExport' importedDEF='ExportedInstanceFoo' AS='WithOtherName'/>
    <ROUTE fromNode='Timer' fromField='fraction_changed' toNode='PI' toField='set_fraction'/>
    <ROUTE fromNode='PI' fromField='value_changed' toNode='T' toField='set_translation'/>
    <EXPORT localDEF='FOO' AS='FOObah'/>
    <EXPORT localDEF='QUAD'/>
  </Scene>
</X3D>