const
   X3D       = require ("../../X3D"),
   Generator = X3D .require ("x_ite/InputOutput/Generator")

const values = [
   [NaN, "NaN"],
   [Infinity, "Infinity"],
   [-Infinity, "-Infinity"],
   [0, "0"],
   [0.00000123456789, "1.234568e-6"],
   [0.00000123, "1.23e-6"],
   [0.0000123, "1.23e-5"],
   [0.000123, "0.000123"],
   [0.00123, "0.00123"],
   [0.0123, "0.0123"],
   [0.123, "0.123"],
   [1.123, "1.123"],
   [12.123, "12.123"],
   [123.123, "123.123"],
   [1234.123, "1234.123"],
   [12345.123, "12345.12"],
   [123456.123, "123456.1"],
   [1234567.123, "1234567"],
   [12345678.123, "1.234568e7"],
   [123456789.123, "1.234568e8"],
   [1234567890.123, "1.234568e9"],
   [12345678901.123, "1.234568e10"],
   [123456789012.123, "1.234568e11"],
   [-0, "-0"],
   [-0.00000123, "-1.23e-6"],
   [-0.0000123, "-1.23e-5"],
   [-0.000123, "-0.000123"],
   [-0.00123, "-0.00123"],
   [-0.0123, "-0.0123"],
   [-0.123, "-0.123"],
   [-1.123, "-1.123"],
   [-12.123, "-12.123"],
   [-123.123, "-123.123"],
   [-1234.123, "-1234.123"],
   [-12345.123, "-12345.12"],
   [-123456.123, "-123456.1"],
   [-1234567.123, "-1234567"],
   [-12345678.123, "-1.234568e7"],
   [-123456789.123, "-1.234568e8"],
   [-1234567890.123, "-1.234568e9"],
   [-12345678901.123, "-1.234568e10"],
   [-123456789012.123, "-1.234568e11"],
];

test ("Precision", () =>
{
   const generator = new Generator ({ })

   for (const [first, second] of values)
      expect (generator .Precision (first)) .toBe (second)
})

test ("DoublePrecision", () =>
{
   const generator = new Generator ({ doublePrecision: 7 })

   for (const [first, second] of values)
      expect (generator .DoublePrecision (first)) .toBe (second)
})
